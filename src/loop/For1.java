package loop;
/*
for문도 while문과  같은 반복문이고, 코드를 반복 실행하는 역할을 한다 for문은 주로 반복 횟수가 정해져 있을 때 사용한다

for문 구조
for (1. 초기식; 2. 조건식; 4. 증감식 ) {
    //3. 코드
    }
    for문은 다음 순서대로 실행된다
    -   1. 초기식이 실행된다. 주로 반복 횟수와 고나련된 변수를 선언하고 초기화할 때 사용한다. 초기식은 딱 1번 사용된다
        2. 조건식을 검증한다. 참이면 코드를 실행하고, 거짓이면 for문을 빠져나간다
        3. 코드를 실행한다
        4. 코드가 종료되면 증감식을 실행한다. 주로 초기식에 넣은 반복 횟수와 관련된 변수의 값을 증가할 때 사용한다
        5. 다시 2. 조건식부터 시작한다 (무한반복)

        for문은 복잡해 보이지만 while문을 조금 더 편하게 다룰 수 있도록 구조화한 것 뿐이다

        예를 들어 1부터 10까지 출력하는 for문은 다음과 같다
        for(int i = 1; i <=10; i++) {
                System.out.println(i);
                }
                1. 초긴식이 실행된다 int i = 1
                2. 조건식을 검증한다 i <= 10
                3. 조건식이 참이면 코드를 실행한다. System.out.println(i);
                4. 코드가 종료되면 증감식을 실행한다 i++
                5. 다시 2. 조건식을 검증한다 (무한 반복) 이후 i <= 10 조건이 거짓이 되면 for문을 빠져나간다


                --> for문에서 초기식, 조건식, 증감식은 선택이다 다음과 같이 모두 생략해도 된다 단, 생략해도 각 영역을
                구분하는 세미콜론(;)은 유지해야한다
                for (;;) {
                // 코드
                } -> 이렇게 하면 조건이 없기 때문에 무한 반복하는 코드가 된다 따라서 다음과 같은 코드가 된다
                while(true) {
                //코드
                }
 */
public class For1 {
    public static void main(String[] args) {
        for (int i = 1; i < 10; i++){
            System.out.println(i);
        }
    }
}
