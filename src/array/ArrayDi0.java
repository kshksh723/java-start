package array;
/*
        2차원 배열 - 시작
        순서대로 나열 ==> 1차원 배열
        2차원 배열 ==> 이름 그대로 하나의 차원이 추가 된다 2차원 배열은 행과 열로 구성된다

             [0 열]   [1 열]    [2 열]
     [0 행]  |  1   |    2   |   3   |
     [1 행]  |  4   |    5   |   6   |

     2 차원 배열은 int[][] arr = new int[2][3]와 같이 선언하고 생성한다. 그리고 arr[1][2]와 같이 사용하는데 먼저 행 번호를 찾고
     그 다음에 열 번호를 찾으면 된다
     행은 영어로 row, 열은 영어로 column 이라 한다

     2차원 배열의 사용법은 [] 가 하나 추가되는 것을 제외하고는 앞서본 1차원 배열과 같다

     그림의 배열에 들어있는 데이터는 다음과 같다
     arr[행][열], arr[row][column]

    그림의 2차원 배열 데이터
    - arr[0][0] : 1
    - arr[0][1] : 2
    - arr[0][2] : 3
    - arr[1][0] : 4
    - arr[1][1] : 5
    - arr[1][2] : 6

 */
public class ArrayDi0 {
    public static void main(String[] args) {
        // 2x3 2차원 배열을 만든다
        int[][] arr = new int[2][3];    // 행, 열

        arr[0][0] = 1;  // 0행, 0열
        arr[0][1] = 2;  // 0행, 1열
        arr[0][2] = 3;  // 0행, 2열
        arr[1][0] = 4;  // 1행, 0열
        arr[1][1] = 5;  // 1행, 1열
        arr[1][2] = 6;  // 1행, 2열

        // 0행 출력
        System.out.print(arr[0][0] +  " "); // 0열 출력
        System.out.print(arr[0][1] +  " "); // 1열 출력
        System.out.print(arr[0][2] +  " "); // 2열 출력
        System.out.println(); // 한 행이 끝나면 라인을 변경한다
        
        // 1행 출력
        System.out.print(arr[1][0] + " "); // 0열 출력
        System.out.print(arr[1][1] + " "); // 1열 출력
        System.out.print(arr[1][2] + " "); // 2열 출력
        System.out.println(); // 한 행이 끝나면 라인을 변경한다
    }
}
/*
- 이 코드는 2차원 배열을 만들고, 배열에 값을 1부터 6까지 순서대로 직접 입력한다
- 다음과 같은 결과를 만들기 위해 0행에 있는 0,1,2열을 출력한다. 그리고 다음으로 1행에 있는 0,1,2열을 출력한다
 */

